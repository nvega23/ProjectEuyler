# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:

        # 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not 
# exceed four million, find the sum of the even-valued terms.

def fib(n):
    if n == 0:
        return 1
    elif n == 1:
        return 2
    else:
        return fib(n - 1) + fib(n - 2)
    tot = 0
    n = 0
    while fib(n) <= n:
        if fib(n) % 2 != 0:
            tot += fib(n)
        n += 1
    return tot


if __name__ == "__main__":
    tot = fib(5)
    print(tot)
    assert fib(5) == 13
    assert fib(9) == 89
    assert fib(13) == 610
    assert fib(21) == 28657
    assert fib(4000000) == 4613731